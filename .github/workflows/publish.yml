name: Publish

on:
  push
  # push:
  #   tags:
  #     - 'v*'

env:
  POLONG_CORE_TAG: v1.0.0
  POLONG_WEB_VERSION: 1.0.0

jobs:

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - uses: actions/setup-node@v2
  #     with:
  #       node-version: 14

  #   - name: Build
  #     run: |
  #       sudo apt install -y wget rpm
  #       echo "下载核心"
  #       wget https://github.com/alx696/polong-core/releases/download/${POLONG_CORE_TAG}/polong-core-linux
  #       wget https://github.com/alx696/polong-core/releases/download/${POLONG_CORE_TAG}/polong-core-windows
  #       echo "下载网页"
  #       wget https://github.com/alx696/polong-web/archive/refs/tags/v${POLONG_WEB_VERSION}.tar.gz
  #       tar zxf v${POLONG_WEB_VERSION}.tar.gz
  #       rm v${POLONG_WEB_VERSION}.tar.gz
  #       mv polong-web-${POLONG_WEB_VERSION} web
  #       echo "打包Linux"
  #       npm install -g yarn
  #       yarn add electron --dev
  #       yarn add electron-builder --dev
  #       yarn --verbose && yarn dist
  #       ls dist

  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Build
      shell: powershell
      run: |
        echo "下载核心"
        wget -Uri https://github.com/alx696/polong-core/releases/download/${POLONG_CORE_TAG}/polong-core-linux
        wget -Uri https://github.com/alx696/polong-core/releases/download/${POLONG_CORE_TAG}/polong-core-windows
        echo "下载网页"
        wget -Uri https://github.com/alx696/polong-web/archive/refs/tags/v${POLONG_WEB_VERSION}.tar.gz
        tar zxf v${POLONG_WEB_VERSION}.tar.gz
        rm v${POLONG_WEB_VERSION}.tar.gz
        Rename-Item -Path polong-web-${POLONG_WEB_VERSION} -NewName web
        echo "打包Windows"
        npm install -g yarn
        yarn add electron --dev
        yarn add electron-builder --dev
        yarn --verbose && yarn win
        ls dist

  # windows:
  #   container:
  #     image: electronuserland/builder:wine-mono
  #     env:
  #       ELECTRON_CACHE: "/root/.cache/electron"
  #       ELECTRON_BUILDER_CACHE: "/root/.cache/electron-builder"
  #       DEBUG: "electron-builder,electron-builder:*"
  #     volumes:
  #       - ./:/project
  #       - ./node-modules:/project/node_modules
  #       - ~/.cache/electron:/root/.cache/electron
  #       - ~/.cache/electron-builder:/root/.cache/electron-builder
  #       - ~/.cache/yarn:/usr/local/share/.cache/yarn
  #     steps:
  #       - name: Build
  #         run: |
  #           /bin/bash -c "yarn --verbose && yarn win"

###

    # - name: Create release and upload assets
    #   uses: softprops/action-gh-release@v1
    #   if: startsWith(github.ref, 'refs/tags/')
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.TOKEN }}
    #   with:
    #     files: |
    #       'dist/*.deb'
    #       'dist/*.rpm'
